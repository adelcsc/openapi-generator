use actix_web::web;
use crate::HttpResponse;
use crate::controllers::{ {{#adel_tags}}{{#lambda.titlecase}}{{.}}{{/lambda.titlecase}}_Controller{{^-last}}, {{/-last}}{{/adel_tags}} };
{{#openAPI}}
pub fn config_routes(cfg: &mut web::ServiceConfig){
    cfg.service(
        web::scope("/api{{basePathWithoutHost}}")
            {{#paths.entrySet}}
            .service(
                web::resource("{{key}}")
                {{#value.get}}.route(web::get().to({{#value.get.tags}}{{#lambda.titlecase}}{{.}}_Controller{{/lambda.titlecase}}{{/value.get.tags}}::{{#lambda.camelcase}}{{value.get.operationId}}{{/lambda.camelcase}})){{/value.get}}
                {{#value.post}}.route(web::post().to({{#value.post.tags}}{{#lambda.titlecase}}{{.}}_Controller{{/lambda.titlecase}}{{/value.post.tags}}::{{#lambda.camelcase}}{{value.post.operationId}}{{/lambda.camelcase}})){{/value.post}}
                {{#value.patch}}.route(web::patch().to({{#value.patch.tags}}{{#lambda.titlecase}}{{.}}_Controller{{/lambda.titlecase}}{{/value.patch.tags}}::{{#lambda.camelcase}}{{value.patch.operationId}}{{/lambda.camelcase}})){{/value.patch}}
                {{#value.delete}}.route(web::delete().to({{#value.delete.tags}}{{#lambda.titlecase}}{{.}}_Controller{{/lambda.titlecase}}{{/value.delete.tags}}::{{#lambda.camelcase}}{{value.delete.operationId}}{{/lambda.camelcase}})){{/value.delete}}
                {{#value.put}}.route(web::put().to({{#value.put.tags}}{{#lambda.titlecase}}{{.}}_Controller{{/lambda.titlecase}}{{/value.put.tags}}::{{#lambda.camelcase}}{{value.put.operationId}}{{/lambda.camelcase}})){{/value.put}}
            )
            {{/paths.entrySet}}
        );
}
{{/openAPI}}
